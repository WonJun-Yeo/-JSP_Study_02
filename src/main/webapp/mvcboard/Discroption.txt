

Controller(서블릿) 매핑 설정
	1. web.xml에서 설정
		- 중앙에서 client 요청에 대한 Controller를 쉽게 확인 할 수 있다.
		
		
	2. @WebServlet("/mvcboard/view.do") (어노테이션)을 이용한 설정
		- Controller 클래스위에 셋팅되므로 client 요청에 대한 Controller를 찾기 위해서 일일이 확인해봐야한다.
		- 수정이나 없데이트가 거의 일어나지 않는 경우 적합
		
		
첨부 파일이 있는 게시판 (MVC 모델2) : 중, 대규모 사이트 개발할 때
	1. Database의 테이블 생성 (더미 데이터 입력)
	2. DTO 객체 생성 : Application ==> DTO ==> DAO ==> DataBase
					 DataBase ==> DAO ==> DTO ==> Application
	3. DAO 객체 생성 : DataBase에서 Select, Insert, Update, Delete하는 객체
	4. Controller 매핑 설정 (1. web.xml, 2. @(어노테이션을 사용)
	5. Controller 객체 생성 (서블릿), (doGet, doPost) 메소드 재정의
		클라이언트 요청 ==> 모델 (비즈니스 로직 처리, DTO, DAO) ==> View 페이지로 처리결과를 출력
	6. View 페이지 생성
	
	
DBCP (DataBase Connection Pool)
	- Connection 객체 생성시에 서버에 부하가 많이 걸린다.
	- 그래서 톰캣이 실행될 때 Connection 객체를 여러 개 (기본값은 20개) 만들어 두고 필요할 때 부여해준다.
	- 중.대규모 사이트에서 서버의 부하를 감소시키기 위해서 사용한다.
	- 셋팅	(Tomecat10 => conf 폴더)
		1. server.xml 설정
			- GlobalNameResource 사이
				<GlobalNamingResources>
			    	<Resource auth="Container"
		              driverClassName="oracle.jdbc.OracleDriver"
		              type="javax.sql.DataSource" 
		              initialSize="0"
		              minIdle="5"
		              maxTotal="20"
		              maxIdle="20"
		              maxWaitMillis="5000"
		              url="jdbc:oracle:thin:@localhost:1521:xe"
		              name="dbcp_myoracle"
		              username="hr2"
		              password="1234" />
				</GlobalNamingResources>
			- maxTotal : 톰캣 부팅 시, 생성하는 connection 객체 갯수
		2. context.xml 설정
			- context 블락 마지막에
				<ResourceLink global="dbcp_myoracle" name="dbcp_myoracle" 
                  type="javax.sql.DataSource"/>
              <context>
              
        3. Tomcat server 제거 후, 재등록
				